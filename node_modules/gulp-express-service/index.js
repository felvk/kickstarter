var through = require('through');
var os = require('os');
var path = require('path');
var gutil = require('gulp-util');
var PluginError = gutil.PluginError;
var File = gutil.File;
var child_process = require('child_process');

var service = null;
var test = null;
module.exports = function(opt){
	service = process._servers;
	// console.log('child_process',child_process);
	var runService = function(){
		var env = opt.NODE_ENV?opt.NODE_ENV:'development';
		var file = opt.file ? opt.file : 'app.js';
		service = process._servers = child_process.spawn('node', [file], {
			NODE_ENV: env
		});
		service.stdout.setEncoding('utf8');
		service.stdout.on('data', function(data) {
			console.log(data);
		});
		service.stderr.on('data', function(data) {
			console.log(data.toString());
		});
		service.on('exit', function (code, aa)
		{
			console.log('child process exited with code ' + code);
			console.log(aa);
		});
	};
	var testRun = function(){
		test = process._test;
		if(test && test.kill){
			test.kill('SIGTERM');
			test = process._test = null;
		}
		test_dir = opt.test_dir ? opt.test_dir : 'test/**/*';
		test = process._test = child_process.exec('mocha -R spec '+test_dir);
		test.stdout.setEncoding('utf8');
		test.stdout.pipe(process.stdout);
		test.stderr.pipe(process.stderr);
		test.on('exit', function (code)
		{
			console.log('test child process exited with code ' + code);
		});
	};
	var run = function (file){
		if(service && service.kill){
			service.kill('SIGTERM');
			service = process._servers = null;
		}
		this.emit('end');
	};
	return through(run, function(file){
		runService();
		// testRun();
	});
};